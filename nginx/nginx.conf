# Auto-detect number of CPU cores
worker_processes auto;

# Set file descriptor limit
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    # Maximum clients = worker_connections * worker_processes
    worker_connections 1024;
    
    # Optimized to serve many clients with each thread
    use epoll;
    
    # Accept as many connections as possible
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;
    gzip_min_length 1000;
    gzip_disable "MSIE [1-6]\.";

    # Client Settings
    client_max_body_size 64m;
    client_body_buffer_size 128k;

    # Security Headers
    map $sent_http_content_type $security_headers {
        default                                         "frame-ancestors 'none'";
        "~*text/html"                                  "frame-ancestors 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";
    }

    # Cache Settings
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
        ~font/                     max;
    }

    # Server Configs
    server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        server_name _;
        root /usr/share/nginx/html/guustflater/browser;

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy $security_headers always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()";

        # Enable expires headers
        expires $expires;

        # Angular SPA routing
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # Static asset caching
        location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff2?|ttf|eot)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Browser caching of static assets
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # Deny access to . files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Handle 4xx and 5xx errors
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Include any additional config files
    include /etc/nginx/conf.d/*.conf;
}